on: workflow_dispatch

jobs:
  main:
    runs-on: ubuntu-20.04
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Install dependencies
        run: flutter pub get
      - name: Setup linux environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - name: Install JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build linux app
        run: flutter build linux
      - name: Create AppDir
        run: |
          mkdir -p AppDir/bin AppDir/lib
          BINARY_PATH="$(find build/linux/x64/release/bundle -maxdepth 1 -type f -executable)"
          BINARY_NAME="$(basename $BINARY_PATH)"
          ldd $BINARY_PATH | grep "=>" | grep -v "not found" | grep -oP '(?<= => )[^ ]+' | xargs -I{} cp {} AppDir/lib/
          cp $BINARY_PATH AppDir/bin/
          cp -r build/linux/x64/release/bundle/data AppDir/bin/
          cat > AppDir/AppRun <<EOF
          #! /bin/sh
          set -e
          this_dir="\$(readlink -f \"\$(dirname \"\$0\")\")"
          export LD_LIBRARY_PATH="\$this_dir/lib:\$LD_LIBRARY_PATH"
          export PATH="\$this_dir/bin:\$PATH"
          echo exec "\$this_dir/bin/$BINARY_PATH" "\$@"
          EOF
          chmod +x AppDir/AppRun
          cp web/icons/Icon-512.png AppDir/icon.png
          cat > AppDir/"$BINARY_NAME.desktop" <<EOF
          [Desktop Entry]
          Name=$BINARY_NAME
          Exec=$BINARY_NAME
          Type=Application
          Categories=Office
          Icon=icon
          EOF
          wget "https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x ./appimagetool-x86_64.AppImage
          ARCH=x86_64 
          ./appimagetool-x86_64.AppImage AppDir/
          mkdir -p artifacts/build/linux
          cp ./"$BINARY_NAME"-"$ARCH".AppImage artifacts/build/linux/
      - name: Build apk
        run: |
          flutter build apk --release --split-per-abi
          cp -r build/app/outputs/flutter-apk artifacts/build/
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: artifacts